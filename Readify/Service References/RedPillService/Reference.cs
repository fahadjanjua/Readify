//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Readify.RedPillService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TriangleType", Namespace="http://KnockKnock.readify.net")]
    public enum TriangleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equilateral = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Isosceles = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scalene = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://KnockKnock.readify.net", ConfigurationName="RedPillService.IRedPill")]
    public interface IRedPill {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://KnockKnock.readify.net/IRedPill/WhatIsYourToken", ReplyAction="http://KnockKnock.readify.net/IRedPill/WhatIsYourTokenResponse")]
        System.Guid WhatIsYourToken();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://KnockKnock.readify.net/IRedPill/WhatIsYourToken", ReplyAction="http://KnockKnock.readify.net/IRedPill/WhatIsYourTokenResponse")]
        System.IAsyncResult BeginWhatIsYourToken(System.AsyncCallback callback, object asyncState);
        
        System.Guid EndWhatIsYourToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://KnockKnock.readify.net/IRedPill/FibonacciNumber", ReplyAction="http://KnockKnock.readify.net/IRedPill/FibonacciNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentOutOfRangeException), Action="http://KnockKnock.readify.net/IRedPill/FibonacciNumberArgumentOutOfRangeException" +
            "Fault", Name="ArgumentOutOfRangeException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        long FibonacciNumber(long n);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://KnockKnock.readify.net/IRedPill/FibonacciNumber", ReplyAction="http://KnockKnock.readify.net/IRedPill/FibonacciNumberResponse")]
        System.IAsyncResult BeginFibonacciNumber(long n, System.AsyncCallback callback, object asyncState);
        
        long EndFibonacciNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://KnockKnock.readify.net/IRedPill/WhatShapeIsThis", ReplyAction="http://KnockKnock.readify.net/IRedPill/WhatShapeIsThisResponse")]
        Readify.RedPillService.TriangleType WhatShapeIsThis(int a, int b, int c);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://KnockKnock.readify.net/IRedPill/WhatShapeIsThis", ReplyAction="http://KnockKnock.readify.net/IRedPill/WhatShapeIsThisResponse")]
        System.IAsyncResult BeginWhatShapeIsThis(int a, int b, int c, System.AsyncCallback callback, object asyncState);
        
        Readify.RedPillService.TriangleType EndWhatShapeIsThis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://KnockKnock.readify.net/IRedPill/ReverseWords", ReplyAction="http://KnockKnock.readify.net/IRedPill/ReverseWordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://KnockKnock.readify.net/IRedPill/ReverseWordsArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        string ReverseWords(string s);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://KnockKnock.readify.net/IRedPill/ReverseWords", ReplyAction="http://KnockKnock.readify.net/IRedPill/ReverseWordsResponse")]
        System.IAsyncResult BeginReverseWords(string s, System.AsyncCallback callback, object asyncState);
        
        string EndReverseWords(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRedPillChannel : Readify.RedPillService.IRedPill, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WhatIsYourTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WhatIsYourTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FibonacciNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FibonacciNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WhatShapeIsThisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WhatShapeIsThisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Readify.RedPillService.TriangleType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Readify.RedPillService.TriangleType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReverseWordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReverseWordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RedPillClient : System.ServiceModel.ClientBase<Readify.RedPillService.IRedPill>, Readify.RedPillService.IRedPill {
        
        private BeginOperationDelegate onBeginWhatIsYourTokenDelegate;
        
        private EndOperationDelegate onEndWhatIsYourTokenDelegate;
        
        private System.Threading.SendOrPostCallback onWhatIsYourTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginFibonacciNumberDelegate;
        
        private EndOperationDelegate onEndFibonacciNumberDelegate;
        
        private System.Threading.SendOrPostCallback onFibonacciNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginWhatShapeIsThisDelegate;
        
        private EndOperationDelegate onEndWhatShapeIsThisDelegate;
        
        private System.Threading.SendOrPostCallback onWhatShapeIsThisCompletedDelegate;
        
        private BeginOperationDelegate onBeginReverseWordsDelegate;
        
        private EndOperationDelegate onEndReverseWordsDelegate;
        
        private System.Threading.SendOrPostCallback onReverseWordsCompletedDelegate;
        
        public RedPillClient() {
        }
        
        public RedPillClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RedPillClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedPillClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedPillClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<WhatIsYourTokenCompletedEventArgs> WhatIsYourTokenCompleted;
        
        public event System.EventHandler<FibonacciNumberCompletedEventArgs> FibonacciNumberCompleted;
        
        public event System.EventHandler<WhatShapeIsThisCompletedEventArgs> WhatShapeIsThisCompleted;
        
        public event System.EventHandler<ReverseWordsCompletedEventArgs> ReverseWordsCompleted;
        
        public System.Guid WhatIsYourToken() {
            return base.Channel.WhatIsYourToken();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWhatIsYourToken(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhatIsYourToken(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndWhatIsYourToken(System.IAsyncResult result) {
            return base.Channel.EndWhatIsYourToken(result);
        }
        
        private System.IAsyncResult OnBeginWhatIsYourToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginWhatIsYourToken(callback, asyncState);
        }
        
        private object[] OnEndWhatIsYourToken(System.IAsyncResult result) {
            System.Guid retVal = this.EndWhatIsYourToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWhatIsYourTokenCompleted(object state) {
            if ((this.WhatIsYourTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhatIsYourTokenCompleted(this, new WhatIsYourTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhatIsYourTokenAsync() {
            this.WhatIsYourTokenAsync(null);
        }
        
        public void WhatIsYourTokenAsync(object userState) {
            if ((this.onBeginWhatIsYourTokenDelegate == null)) {
                this.onBeginWhatIsYourTokenDelegate = new BeginOperationDelegate(this.OnBeginWhatIsYourToken);
            }
            if ((this.onEndWhatIsYourTokenDelegate == null)) {
                this.onEndWhatIsYourTokenDelegate = new EndOperationDelegate(this.OnEndWhatIsYourToken);
            }
            if ((this.onWhatIsYourTokenCompletedDelegate == null)) {
                this.onWhatIsYourTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhatIsYourTokenCompleted);
            }
            base.InvokeAsync(this.onBeginWhatIsYourTokenDelegate, null, this.onEndWhatIsYourTokenDelegate, this.onWhatIsYourTokenCompletedDelegate, userState);
        }
        
        public long FibonacciNumber(long n) {
            return base.Channel.FibonacciNumber(n);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFibonacciNumber(long n, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFibonacciNumber(n, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndFibonacciNumber(System.IAsyncResult result) {
            return base.Channel.EndFibonacciNumber(result);
        }
        
        private System.IAsyncResult OnBeginFibonacciNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long n = ((long)(inValues[0]));
            return this.BeginFibonacciNumber(n, callback, asyncState);
        }
        
        private object[] OnEndFibonacciNumber(System.IAsyncResult result) {
            long retVal = this.EndFibonacciNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFibonacciNumberCompleted(object state) {
            if ((this.FibonacciNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FibonacciNumberCompleted(this, new FibonacciNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FibonacciNumberAsync(long n) {
            this.FibonacciNumberAsync(n, null);
        }
        
        public void FibonacciNumberAsync(long n, object userState) {
            if ((this.onBeginFibonacciNumberDelegate == null)) {
                this.onBeginFibonacciNumberDelegate = new BeginOperationDelegate(this.OnBeginFibonacciNumber);
            }
            if ((this.onEndFibonacciNumberDelegate == null)) {
                this.onEndFibonacciNumberDelegate = new EndOperationDelegate(this.OnEndFibonacciNumber);
            }
            if ((this.onFibonacciNumberCompletedDelegate == null)) {
                this.onFibonacciNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFibonacciNumberCompleted);
            }
            base.InvokeAsync(this.onBeginFibonacciNumberDelegate, new object[] {
                        n}, this.onEndFibonacciNumberDelegate, this.onFibonacciNumberCompletedDelegate, userState);
        }
        
        public Readify.RedPillService.TriangleType WhatShapeIsThis(int a, int b, int c) {
            return base.Channel.WhatShapeIsThis(a, b, c);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWhatShapeIsThis(int a, int b, int c, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhatShapeIsThis(a, b, c, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Readify.RedPillService.TriangleType EndWhatShapeIsThis(System.IAsyncResult result) {
            return base.Channel.EndWhatShapeIsThis(result);
        }
        
        private System.IAsyncResult OnBeginWhatShapeIsThis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int a = ((int)(inValues[0]));
            int b = ((int)(inValues[1]));
            int c = ((int)(inValues[2]));
            return this.BeginWhatShapeIsThis(a, b, c, callback, asyncState);
        }
        
        private object[] OnEndWhatShapeIsThis(System.IAsyncResult result) {
            Readify.RedPillService.TriangleType retVal = this.EndWhatShapeIsThis(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWhatShapeIsThisCompleted(object state) {
            if ((this.WhatShapeIsThisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhatShapeIsThisCompleted(this, new WhatShapeIsThisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhatShapeIsThisAsync(int a, int b, int c) {
            this.WhatShapeIsThisAsync(a, b, c, null);
        }
        
        public void WhatShapeIsThisAsync(int a, int b, int c, object userState) {
            if ((this.onBeginWhatShapeIsThisDelegate == null)) {
                this.onBeginWhatShapeIsThisDelegate = new BeginOperationDelegate(this.OnBeginWhatShapeIsThis);
            }
            if ((this.onEndWhatShapeIsThisDelegate == null)) {
                this.onEndWhatShapeIsThisDelegate = new EndOperationDelegate(this.OnEndWhatShapeIsThis);
            }
            if ((this.onWhatShapeIsThisCompletedDelegate == null)) {
                this.onWhatShapeIsThisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhatShapeIsThisCompleted);
            }
            base.InvokeAsync(this.onBeginWhatShapeIsThisDelegate, new object[] {
                        a,
                        b,
                        c}, this.onEndWhatShapeIsThisDelegate, this.onWhatShapeIsThisCompletedDelegate, userState);
        }
        
        public string ReverseWords(string s) {
            return base.Channel.ReverseWords(s);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReverseWords(string s, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReverseWords(s, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndReverseWords(System.IAsyncResult result) {
            return base.Channel.EndReverseWords(result);
        }
        
        private System.IAsyncResult OnBeginReverseWords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string s = ((string)(inValues[0]));
            return this.BeginReverseWords(s, callback, asyncState);
        }
        
        private object[] OnEndReverseWords(System.IAsyncResult result) {
            string retVal = this.EndReverseWords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReverseWordsCompleted(object state) {
            if ((this.ReverseWordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReverseWordsCompleted(this, new ReverseWordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReverseWordsAsync(string s) {
            this.ReverseWordsAsync(s, null);
        }
        
        public void ReverseWordsAsync(string s, object userState) {
            if ((this.onBeginReverseWordsDelegate == null)) {
                this.onBeginReverseWordsDelegate = new BeginOperationDelegate(this.OnBeginReverseWords);
            }
            if ((this.onEndReverseWordsDelegate == null)) {
                this.onEndReverseWordsDelegate = new EndOperationDelegate(this.OnEndReverseWords);
            }
            if ((this.onReverseWordsCompletedDelegate == null)) {
                this.onReverseWordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReverseWordsCompleted);
            }
            base.InvokeAsync(this.onBeginReverseWordsDelegate, new object[] {
                        s}, this.onEndReverseWordsDelegate, this.onReverseWordsCompletedDelegate, userState);
        }
    }
}
